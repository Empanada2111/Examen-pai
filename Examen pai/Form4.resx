<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hhlQwWEAAAAASUVORK5CYII=
</value>
  </data>
</root>